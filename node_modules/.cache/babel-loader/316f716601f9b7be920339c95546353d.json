{"ast":null,"code":"import _classCallCheck from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/src/App.js\";\nimport React, { Component } from 'react'; //import {API_URL} from './components/config'\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      unloaded: false,\n      image: [] // onChange = e => {\n      //   const files = Array.from(e.target.files)\n      //   this.setState({ uploading: true })\n      //   const formData = new FormData()\n      //   files.forEach((file, i) => {\n      //     formData.append(i, file)\n      //   })\n      //   fetch(`${API_URL}/image-upload`, {\n      //     method: 'POST',\n      //     body: formData\n      //   })\n      //   .then(res => res.json())\n      //   .then(images => {\n      //     this.setState({ \n      //       uploading: false,\n      //       images\n      //     })\n      //   })\n      // }\n      // removeImage = id => {\n      //   this.setState({\n      //     images: this.state.images.filter(image => image.public_id !== id)\n      //   })\n      // }\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/christophergonzales/Desktop/Random-projects/file_upload/client/src/App.js"],"names":["React","Component","App","state","unloaded","image","onChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B,C,CACA;;IAGqBC,G;;;;;;;;;;;;;;;;;UAErBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,KAAK,EAAE,EAFD,CAKR;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAhCQ,K;;;;;;6BAkCA;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF;AAMC;;;;EA3CgCL,S;;SAAZC,G","sourcesContent":["import React,{Component} from 'react'\n//import {API_URL} from './components/config'\n\n\nexport default class App extends Component{\n\nstate = {\n  unloaded: false,\n  image: []\n}\n\n// onChange = e => {\n//   const files = Array.from(e.target.files)\n//   this.setState({ uploading: true })\n\n//   const formData = new FormData()\n\n//   files.forEach((file, i) => {\n//     formData.append(i, file)\n//   })\n\n//   fetch(`${API_URL}/image-upload`, {\n//     method: 'POST',\n//     body: formData\n//   })\n//   .then(res => res.json())\n//   .then(images => {\n//     this.setState({ \n//       uploading: false,\n//       images\n//     })\n//   })\n// }\n\n// removeImage = id => {\n//   this.setState({\n//     images: this.state.images.filter(image => image.public_id !== id)\n//   })\n// }\n\nrender(){\nreturn(\n  <div>\n  <button onClick={this.onChange}></button>\n</div>\n)\n\n}\n}"]},"metadata":{},"sourceType":"module"}