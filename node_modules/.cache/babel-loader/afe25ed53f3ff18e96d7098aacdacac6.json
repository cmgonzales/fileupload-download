{"ast":null,"code":"import _classCallCheck from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/src/components/buttons.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uploading: false,\n      images: []\n    };\n\n    _this.onChange = function (e) {\n      var files = Array.from(e.target.files);\n\n      _this.setState({\n        uploading: true\n      });\n\n      var formData = new FormData();\n      files.forEach(function (file, i) {\n        formData.append(i, file);\n      });\n      fetch(\"\".concat(API_URL, \"/image-upload\"), {\n        method: 'POST',\n        body: formData\n      }).then(function (res) {\n        return res.json();\n      }).then(function (images) {\n        _this.setState({\n          uploading: false,\n          images: images\n        });\n      });\n    };\n\n    _this.removeImage = function (id) {\n      _this.setState({\n        images: _this.state.images.filter(function (image) {\n          return image.public_id !== id;\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          uploading = _this$state.uploading,\n          images = _this$state.images;\n\n      var content = function content() {\n        switch (true) {\n          case uploading:\n            return React.createElement(Spinner, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            });\n\n          case images.length > 0:\n            return React.createElement(Images, {\n              images: images,\n              removeImage: _this2.removeImage,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            });\n\n          default:\n            return React.createElement(Buttons, {\n              onChange: _this2.onChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            });\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, content()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/christophergonzales/Desktop/Random-projects/file_upload/client/src/components/buttons.js"],"names":["App","state","uploading","images","onChange","e","files","Array","from","target","setState","formData","FormData","forEach","file","i","append","fetch","API_URL","method","body","then","res","json","removeImage","id","filter","image","public_id","content","length","Component"],"mappings":";;;;;;;IAAqBA,G;;;;;;;;;;;;;;;;;UAEjBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAKRC,Q,GAAW,UAAAC,CAAC,EAAI;AACd,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWH,CAAC,CAACI,MAAF,CAASH,KAApB,CAAd;;AACA,YAAKI,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAEA,UAAMS,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAN,MAAAA,KAAK,CAACO,OAAN,CAAc,UAACC,IAAD,EAAOC,CAAP,EAAa;AACzBJ,QAAAA,QAAQ,CAACK,MAAT,CAAgBD,CAAhB,EAAmBD,IAAnB;AACD,OAFD;AAIAG,MAAAA,KAAK,WAAIC,OAAJ,oBAA4B;AAC/BC,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,IAAI,EAAET;AAFyB,OAA5B,CAAL,CAICU,IAJD,CAIM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJT,EAKCF,IALD,CAKM,UAAAlB,MAAM,EAAI;AACd,cAAKO,QAAL,CAAc;AACZR,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,MAAM,EAANA;AAFY,SAAd;AAID,OAVD;AAWD,K;;UAEDqB,W,GAAc,UAAAC,EAAE,EAAI;AAClB,YAAKf,QAAL,CAAc;AACZP,QAAAA,MAAM,EAAE,MAAKF,KAAL,CAAWE,MAAX,CAAkBuB,MAAlB,CAAyB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACC,SAAN,KAAoBH,EAAxB;AAAA,SAA9B;AADI,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACuB,KAAKxB,KAD5B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,MADZ,eACYA,MADZ;;AAGP,UAAM0B,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,gBAAO,IAAP;AACE,eAAK3B,SAAL;AACE,mBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,eAAKC,MAAM,CAAC2B,MAAP,GAAgB,CAArB;AACE,mBAAO,oBAAC,MAAD;AAAQ,cAAA,MAAM,EAAE3B,MAAhB;AAAwB,cAAA,WAAW,EAAE,MAAI,CAACqB,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,mBAAO,oBAAC,OAAD;AAAS,cAAA,QAAQ,EAAE,MAAI,CAACpB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AANJ;AAQD,OATD;;AAWA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyB,OAAO,EADV,CADF,CADF;AAOD;;;;EAzD4BE,S;;SAAZ/B,G","sourcesContent":["export default class App extends Component {\n  \n    state = {\n      uploading: false,\n      images: []\n    }\n  \n    onChange = e => {\n      const files = Array.from(e.target.files)\n      this.setState({ uploading: true })\n  \n      const formData = new FormData()\n  \n      files.forEach((file, i) => {\n        formData.append(i, file)\n      })\n  \n      fetch(`${API_URL}/image-upload`, {\n        method: 'POST',\n        body: formData\n      })\n      .then(res => res.json())\n      .then(images => {\n        this.setState({ \n          uploading: false,\n          images\n        })\n      })\n    }\n  \n    removeImage = id => {\n      this.setState({\n        images: this.state.images.filter(image => image.public_id !== id)\n      })\n    }\n    \n    render() {\n      const { uploading, images } = this.state\n  \n      const content = () => {\n        switch(true) {\n          case uploading:\n            return <Spinner />\n          case images.length > 0:\n            return <Images images={images} removeImage={this.removeImage} />\n          default:\n            return <Buttons onChange={this.onChange} />\n        }\n      }\n  \n      return (\n        <div>\n          <div className='buttons'>\n            {content()}\n          </div>\n        </div>\n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}