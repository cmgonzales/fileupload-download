{"ast":null,"code":"import _classCallCheck from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christophergonzales/Desktop/Random-projects/file_upload/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { API_URL } from './components/config';\nimport Images from './components/Image';\nimport Spinner from './components/spinner';\nimport Buttons from './Buttons';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      unloaded: false,\n      image: []\n    };\n\n    _this.onChange = function (e) {\n      var files = Array.from(e.target.files);\n\n      _this.setState({\n        uploading: true\n      });\n\n      var formData = new FormData();\n      files.forEach(function (file, i) {\n        formData.append(i, file);\n      });\n      fetch(\"\".concat(API_URL, \"/image-upload\"), {\n        method: 'POST',\n        body: formData\n      }).then(function (res) {\n        return res.json();\n      }).then(function (images) {\n        _this.setState({\n          uploading: false,\n          images: images\n        });\n      });\n    };\n\n    _this.removeImage = function (id) {\n      _this.setState({\n        images: _this.state.images.filter(function (image) {\n          return image.public_id !== id;\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          uploading = _this$state.uploading,\n          images = _this$state.images;\n\n      var content = function content() {\n        switch (true) {\n          case uploading:\n            return React.createElement(Spinner, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            });\n\n          case images.length > 0:\n            return React.createElement(Images, {\n              images: images,\n              removeImage: _this2.removeImage,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            });\n\n          default:\n            return React.createElement(Buttons, {\n              onChange: _this2.onChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            });\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, content()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/christophergonzales/Desktop/Random-projects/file_upload/client/src/App.js"],"names":["React","Component","API_URL","Images","Spinner","Buttons","App","state","unloaded","image","onChange","e","files","Array","from","target","setState","uploading","formData","FormData","forEach","file","i","append","fetch","method","body","then","res","json","images","removeImage","id","filter","public_id","content","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAGqBC,G;;;;;;;;;;;;;;;;;UAErBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;UAKRC,Q,GAAW,UAAAC,CAAC,EAAI;AACd,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWH,CAAC,CAACI,MAAF,CAASH,KAApB,CAAd;;AACA,YAAKI,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAEA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAP,MAAAA,KAAK,CAACQ,OAAN,CAAc,UAACC,IAAD,EAAOC,CAAP,EAAa;AACzBJ,QAAAA,QAAQ,CAACK,MAAT,CAAgBD,CAAhB,EAAmBD,IAAnB;AACD,OAFD;AAIAG,MAAAA,KAAK,WAAItB,OAAJ,oBAA4B;AAC/BuB,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,IAAI,EAAER;AAFyB,OAA5B,CAAL,CAICS,IAJD,CAIM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJT,EAKCF,IALD,CAKM,UAAAG,MAAM,EAAI;AACd,cAAKd,QAAL,CAAc;AACZC,UAAAA,SAAS,EAAE,KADC;AAEZa,UAAAA,MAAM,EAANA;AAFY,SAAd;AAID,OAVD;AAWD,K;;UAEDC,W,GAAc,UAAAC,EAAE,EAAI;AAClB,YAAKhB,QAAL,CAAc;AACZc,QAAAA,MAAM,EAAE,MAAKvB,KAAL,CAAWuB,MAAX,CAAkBG,MAAlB,CAAyB,UAAAxB,KAAK;AAAA,iBAAIA,KAAK,CAACyB,SAAN,KAAoBF,EAAxB;AAAA,SAA9B;AADI,OAAd;AAGD,K;;;;;;;6BAEO;AAAA;;AAAA,wBAEqB,KAAKzB,KAF1B;AAAA,UAEAU,SAFA,eAEAA,SAFA;AAAA,UAEWa,MAFX,eAEWA,MAFX;;AAGR,UAAMK,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEtB,gBAAO,IAAP;AACE,eAAKlB,SAAL;AACE,mBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,eAAKa,MAAM,CAACM,MAAP,GAAgB,CAArB;AACE,mBAAO,oBAAC,MAAD;AAAQ,cAAA,MAAM,EAAEN,MAAhB;AAAwB,cAAA,WAAW,EAAE,MAAI,CAACC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,mBAAO,oBAAC,OAAD;AAAS,cAAA,QAAQ,EAAE,MAAI,CAACrB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AANJ;AAQC,OAVD;;AAWA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyB,OAAO,EADV,CADA,CADF;AAQC;;;;EA1DgClC,S;;SAAZK,G","sourcesContent":["import React,{Component} from 'react'\nimport {API_URL} from './components/config'\nimport Images from './components/Image'\nimport Spinner from './components/spinner'\nimport Buttons from './Buttons'\n\n\nexport default class App extends Component{\n\nstate = {\n  unloaded: false,\n  image: []\n}\n\nonChange = e => {\n  const files = Array.from(e.target.files)\n  this.setState({ uploading: true })\n\n  const formData = new FormData()\n\n  files.forEach((file, i) => {\n    formData.append(i, file)\n  })\n\n  fetch(`${API_URL}/image-upload`, {\n    method: 'POST',\n    body: formData\n  })\n  .then(res => res.json())\n  .then(images => {\n    this.setState({ \n      uploading: false,\n      images\n    })\n  })\n}\n\nremoveImage = id => {\n  this.setState({\n    images: this.state.images.filter(image => image.public_id !== id)\n  })\n}\n\nrender(){\n\nconst { uploading, images} = this.state\nconst content = () => {\n\nswitch(true) {\n  case uploading:\n    return <Spinner />\n  case images.length > 0:\n    return <Images images={images} removeImage={this.removeImage} />\n  default:\n    return <Buttons onChange={this.onChange} />\n}\n}\nreturn(\n  <div>\n  <div className='buttons'>\n    {content()}\n  </div>\n</div>\n)\n\n}\n}"]},"metadata":{},"sourceType":"module"}